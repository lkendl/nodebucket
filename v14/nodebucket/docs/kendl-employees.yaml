openapi: "3.0.0"
info:
  title: nodebucket API
  version: 1.0.0
paths:
  /employees/{empId}:
    get:
      tags:
      - Employees
      description: API for returning a single employee document from MongoDB Atlas.
      summary: returns an employee document
      parameters:
        - name: empId
          in: path
          required: true
          description: The empId requested by the user.
          schema:
            type: number
      responses:
        '200':
          description: Employee document
        '500':
          description: Server Exception
        '501':
          description: MongoDB Exception

  /employees/{empId}/tasks:
    get:
      tags:
        - Employees
      description: API for returning an employee's array of tasks from MongoDB Atlas.
      summary: returns an array of tasks
      parameters:
        - name: empId
          in: path
          required: true
          description: The user's empId.
          schema:
          type: number
      responses:
        '200':
          description: Employee document
        '500':
          description: Server Exception
        '501':
          description: MongoDB Exception
    post:
      tags:
        - Employees
      description: API to create a new task item by empId.
      summary: Create a new task item by empId
      parameters:
        - name: empId
          in: path
          required: true
          description: The user's empId
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - text
              properties:
                text:
                  description: User's task input
                  type: string
      responses:
        '200':
          description: Employee document
        '500':
          description: Server Exception
        '501':
          description: MongoDB Exception
    put:
      tags:
        - Employees
      description: API for updating an employee's tasks in MongoDB Atlas.
      summary: Updates employee tasks by empId
      parameters:
        - name: empId
          in: path
          required: true
          description: The user's empId.
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - todo
                - doing
                - done
              properties:
              todo:
                description: User todo input
                type: array
                items:
                  type: object
                  properties:
                    text:
                      description: Employee's todo text input
                      type: string
              doing:
                description: User doing input
                type: array
                items:
                  type: object
                  properties:
                    text:
                      description: Employee's doing text input
                      type: string
              done:
                description: User done input
                type: array
                items:
                  type: object
                  properties:
                    text:
                      description: Employee's done text input
                      type: string
      responses:
        '200':
          description: Query successful
        '500':
          description: Server Exception
        '501':
          description: MongoDB Exception
  /employees/{empId}/tasks/{taskId}:
    delete:
      tags:
        - Employees
      description: API to delete an employee's task from MongoDB Atlas.
      summary: Deletes a task
      parameters:
        - name: empId
          in: path
          required: true
          description: The user's empId.
          schema:
            type: number
        - name: taskId
          in: path
          required: true
          description: The taskId of task to be deleted.
          schema:
            type: string
      responses:
        '200':
          description: Query successful
        '500':
          description: Server Exception
        '501':
          description: MongoDB Exception
