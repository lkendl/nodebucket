/**
============================================
; Title: nodebucket
; File Name: theme.scss
; Author: Professor Krasso
; Date: 19 August 2022
; Modified By: Laura Kendl
; Description: "nodebucket is task management software designed to simplify the way you
; create, track, edit, and delete time sensitive material. This is a full-stack
; MEAN (MongoDB, Express, Angular, and Node.js) application, utilizing the concepts that
; were taught in previous courses. MongoDB will be used for data persistence. Node.js
; will be used for manipulating and returning saved records, SoapUI for unit testing,
; and Angular for user interactions" (Krasso, 2022).
; ===========================================
*/

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import "~@angular/material/theming";
// Plus imports for other components in your app.
@import "./gryffindor-theme";

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$nodebucket-primary: mat-palette($mat-indigo);
$nodebucket-accent: mat-palette($mat-pink, A200, A100, A400);
$nodebucket-dark-primary: mat-palette($mat-blue);
$nodebucket-dark-accent: mat-palette($mat-green, 400);

$gryffindor-primary: mat-palette($md-black, 500);
$gryffindor-accent: mat-palette($md-gryffindor-red, 400);
$gryffindor-accent-secondary: mat-palette($md-gryffindor-gold, 400);

$gryffindor-dark-primary: mat-palette($md-gryffindor-red, 400);
$gryffindor-dark-accent: mat-palette($md-gryffindor-gold, 400);
$gryffindor-dark-accent-secondary: mat-palette($md-gryffindor-gold, 400);
$gryffindor-background-color: map_get($md-gryffindor-red, 500);

// The warn palette is optional (defaults to red).
$nodebucket-warn: mat-palette($mat-red);
$nodebucket-dark-warn: mat-palette($mat-red, 400);
$gryffindor-warn: mat-palette($md-gryffindor-gold, 400);
$gryffindor-dark-warn: mat-palette($md-gryffindor-gold, 400);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$nodebucket-theme: mat-light-theme(
  (
    color: (
      primary: $nodebucket-primary,
      accent: $nodebucket-accent,
      warn: $nodebucket-warn,
    ),
  )
);
$nodebucket-dark-theme: mat-dark-theme(
  (
    color: (
      primary: $nodebucket-dark-primary,
      accent: $nodebucket-dark-accent,
      warn: $nodebucket-dark-warn,
    ),
  )
);
$gryffindor-theme: mat-light-theme(
  (
    color: (
      primary: $gryffindor-primary,
      accent: $gryffindor-accent,
      secondary: $gryffindor-accent-secondary,
      warn: $gryffindor-warn,
    ),
  )
);
$gryffindor-dark-theme: mat-dark-theme(
  (
    color: (
      primary: $gryffindor-dark-primary,
      accent: $gryffindor-dark-accent,
      secondary: $gryffindor-dark-accent-secondary,
      warn: $gryffindor-dark-warn,
    ),
  )
);

// Insert custom background color
// $background: map-get($gryffindor-theme, background);
// $background: map_merge($background, (background: $gryffindor-background-color));
// $gryffindor-theme: map_merge($gryffindor-theme, (background: $background));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
// @include angular-material-theme($nodebucket-theme);
// @include angular-material-theme($nodebucket-dark-theme);
@include angular-material-theme($gryffindor-theme);
